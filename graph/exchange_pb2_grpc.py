# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import exchange_pb2 as exchange__pb2


class PlayerInfoStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRecommendedPlayerByName = channel.unary_unary(
                '/PlayerInfo/GetRecommendedPlayerByName',
                request_serializer=exchange__pb2.RecommendPlayerRequest.SerializeToString,
                response_deserializer=exchange__pb2.RecommendPlayerResponse.FromString,
                )
        self.GetBestAttributesByPlayerID = channel.unary_unary(
                '/PlayerInfo/GetBestAttributesByPlayerID',
                request_serializer=exchange__pb2.AttributeRequest.SerializeToString,
                response_deserializer=exchange__pb2.AttributeResponse.FromString,
                )
        self.GetSimilarPlayerList = channel.unary_unary(
                '/PlayerInfo/GetSimilarPlayerList',
                request_serializer=exchange__pb2.GraphByPlayerAndAlgoRequest.SerializeToString,
                response_deserializer=exchange__pb2.GraphByPlayerAndAlgoResponse.FromString,
                )


class PlayerInfoServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetRecommendedPlayerByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBestAttributesByPlayerID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSimilarPlayerList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlayerInfoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetRecommendedPlayerByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRecommendedPlayerByName,
                    request_deserializer=exchange__pb2.RecommendPlayerRequest.FromString,
                    response_serializer=exchange__pb2.RecommendPlayerResponse.SerializeToString,
            ),
            'GetBestAttributesByPlayerID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBestAttributesByPlayerID,
                    request_deserializer=exchange__pb2.AttributeRequest.FromString,
                    response_serializer=exchange__pb2.AttributeResponse.SerializeToString,
            ),
            'GetSimilarPlayerList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSimilarPlayerList,
                    request_deserializer=exchange__pb2.GraphByPlayerAndAlgoRequest.FromString,
                    response_serializer=exchange__pb2.GraphByPlayerAndAlgoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'PlayerInfo', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PlayerInfo(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetRecommendedPlayerByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PlayerInfo/GetRecommendedPlayerByName',
            exchange__pb2.RecommendPlayerRequest.SerializeToString,
            exchange__pb2.RecommendPlayerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBestAttributesByPlayerID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PlayerInfo/GetBestAttributesByPlayerID',
            exchange__pb2.AttributeRequest.SerializeToString,
            exchange__pb2.AttributeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSimilarPlayerList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PlayerInfo/GetSimilarPlayerList',
            exchange__pb2.GraphByPlayerAndAlgoRequest.SerializeToString,
            exchange__pb2.GraphByPlayerAndAlgoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
